name: ⚒️ Build and Push Docker Image

on:
  workflow_call:

jobs:
  lint:
    name: Lint Dockerfile
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - name: Lint Dockerfile
        # language=sh
        run: |
          docker run --rm --interactive ghcr.io/hadolint/hadolint hadolint --ignore DL3008 - < Dockerfile

  build-and-push-docker-image:
    name: Build and push Docker image
    needs: lint
    runs-on: ubuntu-latest

    permissions:
      contents: read
      # These permissions are needed to interact with GitHub's OIDC Token endpoint.
      id-token: write
      # Ability to push image to GitHub container registry
      packages: write
      # Give Docker Scout permission to write a comment
      pull-requests: write

    env:
      GHCR_REGISTRY: ghcr.io
      GHCR_REPOSITORY: ghcr.io/${{ github.repository }}

    steps:
      - uses: actions/checkout@v4

      # Extract tags and labels from the GitHub context
      - name: Prepare image metadata
        id: metadata
        uses: docker/metadata-action@v5
        with:
          images: |
            ${{ env.GHCR_REPOSITORY }}

          labels: |
            org.opencontainers.image.description=Example

          # Set the highest priority for sha-* tag, so it can be used as the main image tag,
          # see https://github.com/docker/metadata-action?tab=readme-ov-file#priority-attribute
          tags: |
            # Set the highest priority for sha tag, so it can be used as the main image tag
            type=sha,format=short
            
            # Set latest tag for default branch
            type=raw,value=latest,enable={{is_default_branch}}
            
            type=ref,event=branch
            type=ref,event=tag
            type=ref,event=pr

      - uses: docker/setup-buildx-action@v3
        with:
          install: true # Sets up docker build command as an alias to docker buildx

      - name: Log in to the GitHub Container registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.GHCR_REPOSITORY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and push
        uses: docker/build-push-action@v5
        with:
          context: .
          tags: ${{ steps.metadata.outputs.tags }}
          labels: ${{ steps.metadata.outputs.labels }}
          cache-from: type=registry,ref=${{ env.GHCR_REPOSITORY }}:cache
          # Export layers from all build stages
          cache-to: type=registry,ref=${{ env.GHCR_REPOSITORY }}:cache,mode=max
